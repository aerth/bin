#!/bin/sh
# aerth was here
set -e
# set OUTPUT variable to save packages elsewhere
output=${OUTPUT:="/tmp"}
# set TMP variable if your /tmp is small.
TMP=${TMP:=/tmp}
if [ -z "$1" ]; then
echo [auto go build]
echo Need target go package.
echo Usage: $(basename "$0") package github.com/aerth/slow
exit 1
fi

# as root!?
if [ "`id -u`" = "0" ]; then
echo Not as root!
exit 1
fi

buildone() {
mkdir -p $output

unset CDPATH

if [ ! -z "$GOPATH" ];then
unset GOPATH
fi

# make a new unique temporary go path
GOTMP=$(mktemp -d "$TMP/go-XXXXXX") || exit 1

# need to be exported for go builds to respect the variable
export GOPATH=$GOTMP
export GOBIN=/tmp/bin
PATH=$PATH:$GOBIN

# check for go
if [ -z $(which go) ]; then
echo you dont have go installed.
exit 1
fi

# check for godep
if [ -z $(which godep) ]; then
echo you dont have godep installed.
echo \'go get -v github.com/tools/godep\'
exit 1
fi

####
# build a go program
####
base=$(basename $1)-$(uname -s)-$(uname -m).tar.gz
go get -v -u -d "$1"
go get -v -u -d golang.org/x/sys/unix # workaround stupid bug
cd $GOPATH/src/$1 && godep get ./... && godep save ./... && godep go build && tar czf $output/$base . && sha256sum $output/$base > $output/$base.sha256.txt && echo "[ready] $output/$base" && cleanup
}

cleanup() {
echo Deleting /tmp/go in 5 seconds.
sleep 5
unset GOPATH
unset GOBIN
unset GOTAR
rm -Rf $TMPGO

}


case "$1" in
'package')
  buildone $2
  ;;
*)
  echo "usage $0 package github.com/aerth/slow"
esac



